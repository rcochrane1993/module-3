1.A binary search tree is a tree in which the left node is always a lesser value, while the right node is
always a greater value.This makes it unique from other trees where the left or right nodes don't have contrictions

2. a heuristic is a "guess" made my a computer through an algorithm in order to increase efficiency
and avoid finding all possible answers and choosing the right one.

3. another problem requiring heuristics could be a hacker trying to find the pin number of a credit card number he 
acquired.

4.a depth-first search searches all the way down a tree for as long as possible for each branch
while a breath-first search does the opposit and checks all the neighboring nodes before moving to the 
next level down in the tree.

5. An undirected,a-cyclic, unweighted graph is a graph that does not specify direction of travel, cannot form
a closed loop, and there is no assigned "travel-cost" for going between nodes.

6.a binary search tree could be an undirected,a-cyclic,unweighted graph




PROGRAMMING QUESTIONS

1.
function search(node,value,){
  if(node===null){
    return false
  }
  if(value<node.value){
    return search(node.left,value)
  }
  if (value > node.value){
    return search(node.right,value)
  }  
  return true
}


let three = {value:3,left:null,right:null}
let ten = {value:10,left:null,right:null}
let eight={value:8,left:three,right:ten}

console.log(search(eight,11))

2. 

function search(node,value,count){
  count++
  if(node===null){
    return false
  }
  if(value<node.value){
    return search(node.left,value,count)
  }
  if (value > node.value){
    return search(node.right,value,count)
  }  
  return count -1
}


let fourteen={value:14,right:null,left:null}
let four={value:4,right:null,left:null}
let six ={value:6,left:four,right:null}
let three = {value:3,left:null,right:six}
let ten = {value:10,left:null,right:fourteen}
let eight={value:8,left:three,right:ten}

console.log(search(eight,4,0)+search(eight,14,0))